"""
Django settings for ChatGPT_WebAPI project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p448kksq61lu#nxt!lgt3ra!x-9)(0_9+++i@n+j9pzmo9j&uk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'APP_Users_Login.apps.AppUsersLoginConfig',  # 用户模块
    'APP_User_Operate.apps.AppUserOperateConfig',  # 用户操作模块
    # 'APP_Chat.apps.AppChatConfig',  # 聊天模块
    'channels',  # websocket
]

MIDDLEWARE = [
    'Middlewares.urlRecorder.RequestLogMiddleware',  # 记录请求日志
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'Middlewares.viewException.viewException',  # 视图异常处理, 保存到日志
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'Middlewares.userAuthMidd.UserAuthMiddleWare',  # 用户权限验证
]

ROOT_URLCONF = 'ChatGPT_WebAPI.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ChatGPT_WebAPI.wsgi.application'
ASGI_APPLICATION = 'ChatGPT_WebAPI.asgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ChatGPT',
        'USER': 'root',
        'PASSWORD': '3412',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    "formatters": {  # 日志格式
        "verbose": {  # 格式化日志信息
            "format": "%(levelname)s %(asctime)s %(module)s "
                      "%(process)d %(thread)d %(message)s "
        },
    },
    'handlers': {
        'file': {  # 打印到文件
            'level': 'WARNING',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'Logs/django_info.log',  # 日志文件名
            'maxBytes': 1024 * 1024 * 100,  # 文件大小
            'formatter': 'verbose',  # 日志格式
            'encoding': 'utf-8',
        },
        "console": {  # 打印到终端console
            "level": "INFO",
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],  # 打印到文件和终端
            'level': 'INFO',  # 日志级别
            'propagate': True,
        },
    },
}

websocket_interface_dict = {}  # websocket接口
chat_assistant_interface_dict = {}  # 聊天助手接口
openai_api = "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"
